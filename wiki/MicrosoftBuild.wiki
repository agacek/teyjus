#summary Building Teyjus on Windows using the Microsoft toolchain

= Required Software =

  * [http://caml.inria.fr/download.en.html O'Caml]
  * [http://omake.metaprl.org/download.html OMake]
  * [http://msdn2.microsoft.com/en-us/vstudio/default.aspx Microsoft Visual Studio 2008]
  * [http://gnuwin32.sourceforge.net/packages/flex.htm Flex]
  * [http://gnuwin32.sourceforge.net/packages/bison.htm Bison]
  * Ocamake (see below)
  * The Teyjus source distribution

  All of the above should be installed and in your PATH.

= Installing additional dependencies =
  * Ocamake
  Ocamake is a useful utility for compiling O'Caml programs.  It is available from [http://tech.motion-twin.com/ocamake.html Motion-Twin], however you should use the version included in the Teyjus distribution (located at /util/ocamake.ml), as it has been patched to allow it to parse Microsoft Visual Studio 2008 project files.  To build ocamake, run the following command from the command line in the /util directory:
{{{
  ocamlc unix.cma str.cma ocamake.ml -o ocamake.exe
}}}

Then, place ocamake.exe in your path; one option is to copy the binary to the O'Caml /bin directory.


= Building Teyjus =

Open the provided solution (located at /source/VisualStudio/Teyjus.sln) and select Build\Rebuild Solution, or type Ctrl + Alt + F7.  This will build all of the binaries, and place them in /bin.

Note that building has only been tested on Microsoft Visual Studio 2008 Standard and Professional editions; while it is likely that the system will build on an Express edition of the software, this has _not_ been investigated.

= For Teyjus Developers =

If you want to work on the code of Teyjus will need a few more tools in order to run the automated tests.  First, you should install the following tools.

  * [http://http://www.activestate.com/store/activeperl Perl]
  * [http://gnuwin32.sourceforge.net/packages/diffutils.htm DiffUtils]

You should also obtain the full source code of Teyjus from the [http://code.google.com/p/teyjus/source/checkout subversion repository]. You can then run the automated tests by running the following commands at the command line in the /source directory:
{{{
  omake test
  omake compiler-test
  omake linker-test
}}}